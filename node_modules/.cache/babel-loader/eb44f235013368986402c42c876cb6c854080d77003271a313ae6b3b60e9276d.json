{"ast":null,"code":"var _jsxFileName = \"/home/richardmiruka/ALX-Portfolio-Project/SDMS-Frontend/sdms-app/src/components/PlayerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerList = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    fetch('/api/players') //I will have to replace with the actual endpoint(api) for fetching players\n    .then(response => response.json()).then(data => setPlayers(data)).catch(error => console.error('Error fetching players:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Player List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: players.map(player => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), \" - \", player.position]\n      }, player.player_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerList, \"X/Tdqu5+Xz4mrEJLe3+u4Igo5rg=\");\n_c = PlayerList;\nexport default PlayerList;\nvar _c;\n$RefreshReg$(_c, \"PlayerList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PlayerList","_s","players","setPlayers","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","name","position","player_id","_c","$RefreshReg$"],"sources":["/home/richardmiruka/ALX-Portfolio-Project/SDMS-Frontend/sdms-app/src/components/PlayerList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst PlayerList = () => {\n  const [players, setPlayers] = useState([]);\n\n  useEffect(() => {\n    \n    fetch('/api/players')  //I will have to replace with the actual endpoint(api) for fetching players\n      .then(response => response.json())\n      .then(data => setPlayers(data))\n      .catch(error => console.error('Error fetching players:', error));\n  }, []);\n\n  return (\n    <div>\n      <h2>Player List</h2>\n      <ul>\n        {players.map(player => (\n          <li key={player.player_id}>\n            <strong>{player.name}</strong> - {player.position}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PlayerList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IAEdO,KAAK,CAAC,cAAc,CAAC,CAAE;IAAA,CACpBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,UAAU,CAACK,IAAI,CAAC,CAAC,CAC9BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBjB,OAAA;MAAAa,QAAA,EACGV,OAAO,CAACe,GAAG,CAACC,MAAM,iBACjBnB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAASM,MAAM,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACE,MAAM,CAACE,QAAQ;MAAA,GAD1CF,MAAM,CAACG,SAAS;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CAvBID,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}